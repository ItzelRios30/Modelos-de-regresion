#Funcion con el modelo de KNN Regression
import sys
import warnings
import numpy as np
import pandas as pd 
import matplotlib.pyplot as plt

from sklearn import neighbors
from sklearn.metrics import mean_squared_error
from sklearn.metrics import mean_absolute_error
from sklearn.model_selection import GridSearchCV
from sklearn.model_selection import train_test_split

if not sys.warnoptions:
    warnings.simplefilter("ignore")

def MODEL_KNNR (X_regressor,Y_target):

    X_train, X_test, y_train, y_test = train_test_split(X_regressor, Y_target, test_size=0.2, random_state=0)
    
    knr=neighbors.KNeighborsRegressor()
    
    parameters_grid = {'n_neighbors': np.arange(5, 60, 1),
                  'weights': ['uniform', 'distance'],
                  'metric':['euclidean','minkowski','manhattan']}
    
    grid = GridSearchCV(knr,parameters_grid)
    grid.fit(X_train,y_train)
    
    knr = grid.best_estimator_
    prediction=knr.predict(X_test)
    
    df=pd.DataFrame()
    df=X_test.copy()
    df['price'] = y_test
    df['prediction']=prediction
    
    if Y_target.name=='Precio/m2':
        prediction=df['prediction']*df['m2']
        y_validate=df['price']*df['m2']
    else:
        prediction=df['prediction']
        y_validate=df['price']
    
    MAE_score = mean_absolute_error(prediction,y_validate)
    MSE_score=np.sqrt(mean_squared_error(prediction,y_validate))
    print('En la colonia',name_colonia,'la diferencia es de',MAE_score,'+/-',MSE_score)
    

    absolute_variation = np.floor((abs(prediction/y_validate-1))*100)

    bins = [-0.1, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100]
    S = pd.cut(absolute_variation, bins)
    Y_exe = S.value_counts().reindex(S.cat.categories)
    fig = plt.figure(figsize = (14, 7))
    plt.plot(range(0,10), Y_exe, 'ro-') 
    plt.xticks(range(0,11),bins) 
    plt.ylabel('Frecuencia')
    plt.xlabel('Rango en diferencia Porcentual')
    plt.show()
    
     
    return knr
    

colonias_in = [365,363,305,452,148,46,392,87,440,444,436,20,319,339,196,438,15,454,204] ##
columns_order = ['m2', 'Rec', 'Est', 'Ba�']
result={}

for i in colonias_in:
    X_colonia=X[X['Colonia2']==i][{'m2', 'Rec', 'Est', 'Ba�'}]
    X_colonia = X_colonia.reindex(columns = columns_order)
    Y_colonia=Y['Precio/m2'][Y['Colonia2']==i]
    name_colonia = str((x["Colonia"][x['Colonia2']==i].iloc[1]))
    
    result[i]=MODEL_KNNR(X_colonia,Y_colonia)
    result
    
joblib.dump(result, 'modelo_entrenado_knnr.pkl')
